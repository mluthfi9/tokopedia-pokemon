{"version":3,"sources":["Components/Navbar.js","Components/CardItem.js","Components/Cards.js","Components/Footer.js","Components/Banner.js","Components/pages/Home.js","Components/Pokemon.js","GraphQL/get-pokemons.js","Components/PokemonsContainer.js","Components/pages/PokemonList.js","GraphQL/get-pokemon.js","Components/PokemonCards.js","Components/pages/PokemonDetails.js","Components/pages/MyPokemon.js","App.js","index.js"],"names":["Navbar","useState","click","setClick","closeMobileMenu","className","to","onClick","alt","src","CardItem","props","pathname","state","name","label","imageUrl","data-category","text","Cards","Footer","Banner","Home","Pokemon","pokemon","own","release","image","undefined","nickname","trigger","modal","close","type","GET_POKEMONS","gql","gqlVariables","limit","offset","PokemonsContainer","useLazyQuery","variables","getPokemons","loading","error","data","myPokemons","setMyPokemons","useEffect","pokemonStrorage","JSON","parse","localStorage","getItem","message","id","pokemons","results","map","p","filter","length","prevOffset","nextOffset","PokemonList","client","ApolloClient","uri","GET_POKEMON","LOCAL_STORAGE_KEY","PokemonCards","imageURL","history","useHistory","push","useQuery","toLowerCase","pokemonName","useRef","success","setSuccess","open","setOpen","closeModal","setItem","stringify","dataPokemon","order","types","t","join","species","height","weight","abilities","ability","stats","base_stat","forms","moves","num","Math","floor","random","console","log","o","closeOnDocumentClick","onClose","ref","placeholder","current","value","find","toUpperCase","alert","prev","PokemonDetails","location","MyPokemon","ReleasePokemon","newList","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad1b5243.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const handleClick = ()=> setClick(!click);\r\n    const closeMobileMenu = ()=> setClick(false);\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-container\">\r\n                    <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                        Tokopedia Pokemon <img alt=\"logo\" className=\"nav-bar-logo\" src=\"images/tokopedia-ico.png\"/>\r\n                    </Link>\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'}/>\r\n                    </div>\r\n                    <ul className ={click ? 'nav-menu active' : 'nav-menu'}>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}> \r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/MyPokemon' className='nav-links' onClick={closeMobileMenu}> \r\n                                My Pokemon\r\n                            </Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/PokemonList' className='nav-links' onClick={closeMobileMenu}> \r\n                                Pokemon List\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction CardItem(props) {\n  return (\n    <>\n      <li className='cards__item'>\n        <Link className='cards__item__link' to={{ pathname: '/PokemonDetails', state: { name: props.label, imageUrl:  props.imageUrl }}}>\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\n            <img\n              className='cards__item__img'\n              alt='Pokemon'\n              src={props.src}\n            />\n          </figure>\n          <div className='cards__item__info'>\n            <h5 className='cards__item__text'>{props.text}</h5>\n          </div>\n        </Link>\n      </li>\n    </>\n  );\n}\n\nexport default CardItem;\n","import React from 'react';\nimport './Cards.css';\nimport CardItem from './CardItem';\n\nfunction Cards() {\n  return (\n    <div className='cards'>\n      <h1>Explore and Catch Legendary Pokemon!</h1>\n      <div className='cards__container'>\n        <div className='cards__wrapper'>\n          <ul className='cards__items'>\n            <CardItem\n              src='/images/mewtwo.jpg'\n              text='One most powerfull pokemon with psychic abily'\n              label='Mewtwo'\n              imageUrl = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/150.png'\n            />\n            <CardItem\n              src='/images/rayquaza.jpg'\n              text='Legends remain of how it put to rest the clash between Kyogre and Groudon'\n              label='Rayquaza'\n              imageUrl = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/384.png'\n            />\n          </ul>\n          <ul className='cards__items'>\n            <CardItem\n              src='/images/dialga.jpg'\n              text=\"A legendary Pokémon of Sinnoh. It is said that time flows when Dialga's heart beats\"\n              label='Dialga'\n              imageUrl = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/483.png'\n            />\n            <CardItem\n              src='./images/xerneas.jpg'\n              text='Legends say it can share eternal life. It slept for a thousand years in the form of a tree before its revival'\n              label='Xerneas'\n              imageUrl = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/716.png'\n            />\n            <CardItem\n              src='./images/Suicune.jpg'\n              text='Said to be the reincarnation of north winds, it can instantly purify filthy, murky water.'\n              label='Suicune'\n              imageUrl = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/245.png'\n            />\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <div className='footer-container'>\n      <section className='footer-subscription'>\n        <p className='footer-subscription-heading'>\n          Explore pokemon world with your pokemon partner\n        </p>\n        <p className='footer-subscription-text'>\n          Create By Muhammad Luthfi for Project Assinment Web Platform Engineers-Tokopedia\n        </p>\n      </section>\n      <div className='footer-links'>\n        <div className='footer-link-wrapper'>\n          <div className='footer-link-items'>\n            <h2>(+62) 89678843366</h2>\n          </div>\n          <div className='footer-link-items'>\n            <h2>Linkedin.com/in/m-luthfi/</h2>\n          </div>\n          <div className='footer-link-items'>\n            <h2>Work.Muhluthfi@Gmail.com</h2>\n          </div>\n        </div>\n      </div>      \n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport '../App.css';\nimport './Banner.css';\n\nfunction Banner() {\n  return (\n    <div className='banner-container'>\n      <img src='/images/Pokemon-banner.jpg' alt='banner' className='banner-background' />\n      <h1>WELCOME TO POKEMON WORLD</h1>\n      <p>What are you waiting for?</p>\n      <div className='banner-btns'>\n      <button className='btn btn--outline btn--large'>\n          Catch your first pokemon now <img className='pokeball' src='/images/pokeball.png' alt='pokeball-logo'/>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Banner;\n","import React from 'react';\nimport '../../App.css';\nimport Cards from '../Cards';\nimport Footer from '../Footer';\nimport Banner from '../Banner';\n\nfunction Home() {\n  return (\n    <>\n      <Banner />\n      <Cards />\n      <Footer />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\r\nimport './Pokemon.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from 'reactjs-popup';\r\n\r\nexport default function Pokemon({ pokemon, own, release }) {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"pokemon\">\r\n                <Link to={{ pathname: '/PokemonDetails', state: { name: pokemon.name, imageUrl: pokemon.image } }} >\r\n                    <div className=\"img-container\">\r\n                        <img src={pokemon.image} alt={pokemon.name} />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <h3 className=\"name\">{pokemon.name}</h3>\r\n                        {pokemon.nickname === undefined ? <small>own: <span>{own}</span></small> : <h4>{pokemon.nickname}</h4>\r\n                        }\r\n                    </div>\r\n                </Link>\r\n                {pokemon.nickname &&\r\n                    <Popup trigger={<button className=\"btn btn-primary btn-custom\"> Release Pokemon </button>} modal>\r\n                        {close =>\r\n                            <div className=\"modal-dialog\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <button type=\"button\" className=\"close\" onClick={close}>&times;</button>\r\n                                        <h4 className=\"modal-title\">Release Pokemon</h4>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <p>Are you sure want to release this pokemon?</p>\r\n                                    </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" className=\"btn btn-primary\" onClick={() => release(pokemon.nickname)}>Release</button>\r\n                                        <button type=\"button\" className=\"btn btn-default\" onClick={close}>Cancel</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>}\r\n                    </Popup>}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_POKEMONS = gql `\r\nquery pokemons($limit: Int, $offset: Int) {\r\n  pokemons(limit: $limit, offset: $offset) {\r\n    count\r\n    next\r\n    previous\r\n    nextOffset\r\n    prevOffset\r\n    status\r\n    message\r\n    results {\r\n      id\r\n      url\r\n      name\r\n      image\r\n     }\r\n  }\r\n}`;\r\n\r\nexport const gqlVariables = {\r\n    limit: 12,\r\n    offset: 0,\r\n};","import React, {useEffect, useState} from 'react';\r\nimport Pokemon from './Pokemon';\r\nimport './PokemonContainer.css';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { GET_POKEMONS, gqlVariables } from '../GraphQL/get-pokemons';\r\n\r\nexport const LOCAL_STORAGE_KEY ='pokedex.list';\r\n\r\nexport function PokemonsContainer(){\r\n    const [getPokemons, { loading, error, data }] = useLazyQuery(GET_POKEMONS, {\r\n        variables: gqlVariables\r\n      });\r\n    const [myPokemons, setMyPokemons] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPokemons();\r\n        const pokemonStrorage = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        if(pokemonStrorage) setMyPokemons(pokemonStrorage);\r\n    }, [getPokemons]);\r\n\r\n    function GetPokemonsCount(id){\r\n        return myPokemons.filter(p => p.id === id).length;\r\n    }\r\n\r\n    function NextPage(){\r\n        if(data && data.pokemons && data.pokemons.nextOffset){\r\n            gqlVariables.offset = data.pokemons.nextOffset;\r\n            getPokemons();\r\n        }\r\n    }\r\n\r\n    function PreffPage(){\r\n        if(data && data.pokemons){\r\n            gqlVariables.offset = data.pokemons.prevOffset;\r\n            getPokemons();\r\n        }\r\n    }\r\n\r\n    if (loading) return <h1>Loading Pokemon....</h1>;\r\n    if (error) return `Error! ${error.message}`;\r\n    return (\r\n        <>\r\n            <h1>Pokemon List </h1>\r\n            <div id=\"poke_container\" className=\"poke-container\">\r\n                {data && data.pokemons && data.pokemons.results &&\r\n                     data.pokemons.results.map(p => <Pokemon own ={GetPokemonsCount(p.id)} key = {p.id} pokemon = {p}/>)}\r\n            </div>\r\n            <div className=\"button-link-container\">\r\n                {data && data.pokemons &&  <button className=\"btn-link\" onClick={ ()=> PreffPage()}>\r\n                    <i className=\"fa fa-angle-double-left\"/>Prev Page</button>}\r\n                {data && data.pokemons &&  <button className=\"btn-link\" onClick={ ()=> NextPage()}>Next Page \r\n                    <i className=\"fa fa-angle-double-right\"/></button>}\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}","import React from 'react'\r\nimport { PokemonsContainer } from '../PokemonsContainer'\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport ApolloClient from 'apollo-boost';\r\nimport '../../App.css';\r\n\r\nexport default function PokemonList() {\r\n    const client = new ApolloClient({\r\n        uri :'https://graphql-pokeapi.vercel.app/api/graphql'\r\n    });\r\n\r\n    return(\r\n        <>\r\n        <ApolloProvider client={client}>\r\n            <main>\r\n                <PokemonsContainer />\r\n            </main>\r\n        </ApolloProvider>        \r\n        </>\r\n    );\r\n}","import gql from 'graphql-tag';\r\n\r\nexport const GET_POKEMON = gql`\r\nquery pokemon($name: String!) {\r\n    pokemon(name: $name) {\r\n      id\r\n      name\r\n      abilities {\r\n        ability {\r\n          name\r\n        }\r\n      }\r\n      moves {\r\n        move {\r\n          name\r\n        }\r\n      }\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n      abilities {\r\n        ability {\r\n          name\r\n        }\r\n      }\r\n      stats{\r\n          base_stat\r\n      }\r\n      forms{\r\n        name\r\n      }\r\n      species{\r\n        name\r\n      }\r\n      message\r\n      status\r\n      order\r\n      height\r\n      weight\r\n    }\r\n  }`;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_POKEMON } from '../GraphQL/get-pokemon';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport './PokemonCards.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const LOCAL_STORAGE_KEY = 'pokedex.list';\r\nexport default function PokemonCards({ name, imageURL }) {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(!name){\r\n            history.push('/PokemonList');\r\n        }\r\n        const pokemonStrorage = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        if (pokemonStrorage) setMyPokemons(pokemonStrorage);\r\n    }, []);\r\n\r\n    const { loading, error, data } = useQuery(GET_POKEMON, {\r\n        variables: { name: name.toLowerCase() }\r\n    });\r\n\r\n    const pokemonName = useRef();\r\n    const [myPokemons, setMyPokemons] = useState([]);\r\n    const [success, setSuccess] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const closeModal = () => setOpen(false);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(myPokemons));\r\n    }, [myPokemons]);\r\n\r\n    function CatchPokemon() {\r\n        if (pokemonName.current.value !== '') {\r\n            const isExist = myPokemons.find(p => p.nickname.toUpperCase() === pokemonName.current.value.toUpperCase())\r\n            if (isExist) alert('sorry name already exist, please choose another name');\r\n            else {\r\n                setMyPokemons(prev => {\r\n                    return [...prev, {\r\n                        id: data.pokemon.id, name: data.pokemon.name, image: imageURL, nickname: pokemonName.current.value\r\n                    }];\r\n                });\r\n                setOpen(o => !o);\r\n                alert('Horay!!! new pokemon has registred in My Pokemon page');\r\n            }\r\n        }\r\n        else alert('Please input pokemon name first');\r\n    }\r\n\r\n    function CatchingPokemon() {\r\n        const num = Math.floor(Math.random() * 2);\r\n        console.log(num);\r\n        if (num === 1) setSuccess(true);\r\n        else setSuccess(false);\r\n        setOpen(o => !o);\r\n    }\r\n\r\n    if (loading) return <h1>Loading Pokemon....</h1>;\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    if (data && data.pokemon) {\r\n        const dataPokemon = data.pokemon;\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"card\">\r\n                        <div className=\"container-fliud\">\r\n                            <div className=\"wrapper row\">\r\n                                <div className=\"preview col-md-3 col-sm-2\">\r\n\r\n                                    <div className=\"preview-pic tab-content\">\r\n                                        <div className=\"tab-pane active\" id=\"pic-1\">\r\n                                            <img src={imageURL} alt={dataPokemon.name} /></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"details col-md-10\">\r\n                                    <h2 className=\"poke-name\">{dataPokemon.name} <span className=\"poke-name-span\">#{dataPokemon.order}</span></h2>\r\n                                    <label className=\"label\">Pokemon Data</label>\r\n\r\n                                    <div className=\"table-container\">\r\n                                        <div className=\"column\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>Type</td>\r\n                                                        <td>{dataPokemon.types.map(t => t.type.name).join(', ')}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Species</td>\r\n                                                        <td>{dataPokemon.species.name}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Height</td>\r\n                                                        <td>{dataPokemon.height} feet</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Weight</td>\r\n                                                        <td>{dataPokemon.weight} lbs</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className=\"column\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>Abilities</td>\r\n                                                        <td>{dataPokemon.abilities.map(t => t.ability.name).join(', ')}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Base Stats</td>\r\n                                                        <td>{dataPokemon.stats.map(t => t.base_stat).join(', ')}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Form</td>\r\n                                                        <td>{dataPokemon.forms.map(t => t.name).join(', ')}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Total Move</td>\r\n                                                        <td>{dataPokemon.moves.length}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"action\">\r\n                                        <button className=\"catch btn btn-default\" onClick={CatchingPokemon}> Catch </button>\r\n                                        <Popup open={open} closeOnDocumentClick onClose={closeModal}>\r\n\r\n                                            <div className=\"modal-dialog\">\r\n                                                <div className=\"modal-content\">\r\n                                                    <div className=\"modal-header\">\r\n                                                        <button type=\"button\" className=\"close\" onClick={closeModal}>&times;</button>\r\n                                                        <h4 className=\"modal-title\">{success ? 'Horay!!! Pokemon Catched' : 'Oh no!!! the pokemon go away'}</h4>\r\n                                                    </div>\r\n                                                    <div className=\"modal-body\">\r\n                                                        {success ?\r\n                                                            <div className=\"form-group\">\r\n                                                                <label>Now give it a name</label>\r\n                                                                <input ref={pokemonName} type=\"text\" className=\"form-control\" placeholder=\"Pokemon Name\" />\r\n                                                            </div> : <label>Dont give up!</label>}\r\n                                                    </div>\r\n                                                    <div className=\"modal-footer\">\r\n                                                        {success && <button type=\"button\" className=\"btn btn-primary\" onClick={() => CatchPokemon()}>Confirm</button>}\r\n\r\n                                                        <button type=\"button\" className=\"btn btn-default\" onClick={closeModal}>Release</button>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </Popup >\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PokemonCards from '../PokemonCards';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/client';\r\n\r\nexport default function PokemonDetails(props) {\r\n    const client = new ApolloClient({\r\n        uri: 'https://graphql-pokeapi.vercel.app/api/graphql'\r\n    });\r\n    \r\n    return (\r\n        <>\r\n            <ApolloProvider client={client}>\r\n                <main>\r\n                    <PokemonCards name={props.location.state.name} imageURL ={ props.location.state.imageUrl}/>\r\n                </main>\r\n            </ApolloProvider>\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Pokemon from '../Pokemon';\r\nimport '../PokemonContainer.css';\r\n\r\nexport const LOCAL_STORAGE_KEY ='pokedex.list';\r\n\r\nexport function MyPokemon(){\r\n    const [myPokemons, setMyPokemons] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const pokemonStrorage = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        if(pokemonStrorage) setMyPokemons(pokemonStrorage);\r\n\r\n    },[]);    \r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(myPokemons));\r\n    }, [myPokemons]);\r\n\r\n    function ReleasePokemon(nickname){\r\n        const newList = myPokemons.filter(pokemon => pokemon.nickname !== nickname);\r\n        setMyPokemons(newList);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>{myPokemons.length === 0 ? \"No Pokemon Yet\" : \"Your Pokemon List\"} </h1>\r\n            <div id=\"poke_container\" className=\"poke-container\">\r\n                {myPokemons && myPokemons.map(p => <Pokemon key = {p.nickname} pokemon = {p} release={ReleasePokemon}/>)}\r\n            </div>\r\n        </>\r\n    );\r\n}","import './App.css';\nimport Navbar from './Components/Navbar';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport Home from './Components/pages/Home';\nimport PokemonList from './Components/pages/PokemonList';\nimport PokemonDetails from './Components/pages/PokemonDetails';\nimport { MyPokemon } from './Components/pages/MyPokemon';\n\nfunction App() {\n  return (\n    <>\n    <Router>\n      <Navbar/>\n      <Switch>\n        <Route path='/' exact component={Home}/>\n        <Route path='/PokemonList' exact component={PokemonList}/>\n        <Route path='/PokemonDetails' exact component={PokemonDetails}/>\n        <Route path='/MyPokemon' exact component={MyPokemon}/>\n      </Switch>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}